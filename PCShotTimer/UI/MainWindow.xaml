<Window x:Name="WinMainWindow" x:Class="PCShotTimer.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
        Title="Shot Timer" Height="470" Width="710" ResizeMode="CanMinimize" WindowStartupLocation="CenterScreen"
        Icon="/resources/Icon.ico" Closing="WinMainWindow_Closing" Closed="WinMainWindow_Closed">

    <Window.Resources>
        <!-- Green LED blinking animation -->
        <Storyboard x:Key="GreenLedBlinking" RepeatBehavior="Forever">
            <DoubleAnimation
                Storyboard.TargetName="LedGreen"
                Storyboard.TargetProperty="Opacity"
                From="0.3"
                To="1.0"
                AutoReverse="True"
                Duration="0:0:0.5" />
        </Storyboard>

        <!-- Big ass timer blinking -->
        <Storyboard x:Key="TimerBlinking" RepeatBehavior="Forever">
            <DoubleAnimation
                Storyboard.TargetName="TxtBoxTotalTime"
                Storyboard.TargetProperty="Foreground.Opacity"
                From="0.6"
                To="1.0"
                AutoReverse="True"
                Duration="0:0:0.5" />
        </Storyboard>

        <!-- Buttons style to remove the WPF default 'animated' mouse over effect -->
        <Style x:Key="MyButtonStyle" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="Border"
                                BorderBrush="Black"
                                BorderThickness="1"
                                CornerRadius="3"
                                HorizontalAlignment="Right"
                                Width="116"
                                Height="60"
                                Cursor="Hand">
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                TextBlock.FontFamily="/PCShotTimer;component/fonts/Forced Square/#SquareFont"
                                TextBlock.FontSize="22"
                                TextBlock.FontWeight="Bold" />
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF777777" Offset="0" />
                                    <GradientStop Color="White" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="10" RenderingBias="Quality" />
                            </Border.Effect>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#FF222222" />
                                <Setter TargetName="Border" Property="Border.Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF888888" Offset="0" />
                                            <GradientStop Color="White" Offset="1" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Cursor" Value="Arrow" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="DarkSlateGray" />
                                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- HUD elements -->
        <Style x:Key="HudElementStyle" TargetType="CheckBox">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Name="HuDecorator" Background="Transparent">
                            <BulletDecorator.Bullet>
                                <TextBlock/>
                            </BulletDecorator.Bullet>
                            <ContentPresenter
                                Name="ContentPresenter"
                                Margin="5,5,5,5"
                                TextBlock.FontFamily="/PCShotTimer;component/fonts/Forced Square/#SquareFont"
                                TextBlock.FontSize="15"
                                TextBlock.Foreground="Black"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                RecognizesAccessKey="False"
                                Cursor="Hand"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ContentPresenter" Property="TextBlock.Foreground" Value="#FF333333"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ContentPresenter" Property="TextBlock.Foreground" Value="#FF888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- HUD element: random timer -->
        <Style x:Key="HudRandomDelay" TargetType="CheckBox" BasedOn="{StaticResource HudElementStyle}">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content" Value="🎲"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Content" Value="🕒"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- HUD ready/standby -->
        <Style x:Key="HudReadyStandby" TargetType="CheckBox" BasedOn="{StaticResource HudElementStyle}">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content" Value="📢"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Content" Value="🔇"/>
                </Trigger>
            </Style.Triggers>
        </Style>  
    </Window.Resources>

    <Window.Effect>
        <DropShadowEffect ShadowDepth="15" RenderingBias="Quality" BlurRadius="20" />
    </Window.Effect>

    <Window.Background>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF101010" Offset="0" />
            <GradientStop Color="White" Offset="1" />
        </LinearGradientBrush>
    </Window.Background>

    <Grid x:Name="GridMain">

        <!-- Big (ass) Timer -->
        <TextBox x:Name="TxtBoxTotalTime" HorizontalAlignment="Left" Height="85" Margin="10,10,0,0" TextWrapping="Wrap"
                 Text="{Binding Path=TimeElapsed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 VerticalAlignment="Top" Width="552.239" TextAlignment="Center" FontSize="72"
                 FontFamily="/PCShotTimer;component/fonts/LCDMonoWinTT/#LCDMono" FontWeight="Bold" Foreground="Black"
                 BorderThickness="2" BorderBrush="Black" d:DataContext="{d:DesignData}" IsUndoEnabled="False"
                 IsTabStop="False" IsHitTestVisible="False" Focusable="False" AllowDrop="False">
            <TextBox.Effect>
                <DropShadowEffect BlurRadius="10" RenderingBias="Quality" />
            </TextBox.Effect>
            <TextBox.Background>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="Gray" Offset="1" />
                    <GradientStop Color="White" />
                </LinearGradientBrush>
            </TextBox.Background>
        </TextBox>

        <!-- LEDs -->
        <Ellipse x:Name="LedRed" Fill="Red" HorizontalAlignment="Right" Height="40" Margin="0,35,20,0" Stroke="Black"
                 VerticalAlignment="Top" Width="40" StrokeThickness="2">
            <Ellipse.Effect>
                <DropShadowEffect RenderingBias="Quality" BlurRadius="10" />
            </Ellipse.Effect>
        </Ellipse>
        <Ellipse x:Name="LedGreen" HorizontalAlignment="Right" Height="40" Margin="0,35,80,0" VerticalAlignment="Top"
                 Width="40" Stroke="Black" Fill="Lime" StrokeThickness="2" Opacity="0.5">
            <Ellipse.Effect>
                <DropShadowEffect RenderingBias="Quality" BlurRadius="10" />
            </Ellipse.Effect>
        </Ellipse>

        <!-- ListView -->
        <ListView x:Name="LstViewShots" HorizontalAlignment="Left" Height="322" Margin="10,105,0,0"
                  VerticalAlignment="Top" Width="552" BorderBrush="Black" BorderThickness="2"
                  d:DataContext="{d:DesignInstance}">
            <ListView.Effect>
                <DropShadowEffect BlurRadius="10" RenderingBias="Quality" />
            </ListView.Effect>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="#" DisplayMemberBinding="{Binding Path=Id}" Width="30" />
                    <GridViewColumn Header="Time" DisplayMemberBinding="{Binding Path=Time}" Width="100" />
                    <GridViewColumn Header="Split" DisplayMemberBinding="{Binding Path=Split}" Width="100" />
                </GridView>
            </ListView.View>
        </ListView>

        <!-- START -->
        <Button Style="{StaticResource MyButtonStyle}" x:Name="BtnStart" Content="Start" HorizontalAlignment="Right"
                Margin="0,105,10,0"
                VerticalAlignment="Top" IsDefault="True" Click="ButtonStart_Click" />

        <!-- STOP -->
        <Button Style="{StaticResource MyButtonStyle}" x:Name="BtnStop" Content="Stop" HorizontalAlignment="Right"
                Margin="0,171,10,0"
                VerticalAlignment="Top" Click="ButtonStop_Click" />

        <!-- CLEAR -->
        <Button Style="{StaticResource MyButtonStyle}" x:Name="BtnClear" Content="Clear" HorizontalAlignment="Right"
                Margin="0,237,10,0"
                VerticalAlignment="Top" Click="ButtonClear_Click" IsEnabled="False" />

        <!-- OPTIONS -->
        <Button Style="{StaticResource MyButtonStyle}" x:Name="BtnOption" Content="Options" HorizontalAlignment="Right"
                Margin="0,302,10,0"
                VerticalAlignment="Top" Click="ButtonOptions_Click" />

        <!-- EXIT -->
        <Button Style="{StaticResource MyButtonStyle}" x:Name="BtnExit" Content="Exit" HorizontalAlignment="Right"
                Margin="0,367,10,0"
                VerticalAlignment="Top" Click="ButtonExit_Click" />

        <!-- HUD Random delay -->
        <CheckBox Name="HudRandomDelay"
            Style="{StaticResource HudRandomDelay}" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"
            IsChecked="{Binding Path=Options.GeneralRandomDelay, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
            Click="HudElement_Toggle"
            ToolTip="🎲 Random delay activated&#x0a;🕒 No random delay"/>
        
        <!-- HUD Speeches ready/standby -->
        <CheckBox Name="HudReadyStandby"
            Style="{StaticResource HudReadyStandby}" HorizontalAlignment="Left" Margin="10,35,0,0" VerticalAlignment="Top"
        	IsChecked="{Binding Options.SoundPlayReadyStandby, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
            Click="HudElement_Toggle"
        	ToolTip="📢 Ready/Standby speeches&#xA;🔇 Less talking, more shooting" />
    </Grid>
</Window>